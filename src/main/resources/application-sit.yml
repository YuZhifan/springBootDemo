spring:
  application:
#    name: spring-boot
    name: foo  #{application}
  cloud:
    config:
      discovery:
        enabled: true
        service-id: springBootDemo
      label: master   #{label}
      profile: development  #{profile}
      uri: http://localhost:8888/

  redis:
    hostName: 127.0.0.1
    port: 6379
    password:
    timeout: 5000
    database: 8
    pool:
      maxActive: 10
      maxTotal: 10
      maxWait: -1
      maxIdle: 10
      minIdle: 0

  datasource:
    type: com.alibaba.druid.pool.xa.DruidXADataSource
    name: jiawei
    url: jdbc:mysql://127.0.0.1:3306/jiawei?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=true
    username: root
    password: root
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: SELECT 1
    validationQueryTimeout: 10000
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

swagger:
  enable: true

