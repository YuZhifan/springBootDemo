<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzf.springboot.mapper.LinkmanMapper">
    <resultMap id="BaseResultMap" type="com.yzf.springboot.pojo.entity.Linkman">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="birth" property="birth" jdbcType="VARCHAR"/>
        <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="company" property="company" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="ext1" property="ext1" jdbcType="VARCHAR"/>
        <result column="ext2" property="ext2" jdbcType="VARCHAR"/>
        <result column="ext3" property="ext3" jdbcType="VARCHAR"/>
        <result column="uid" property="uid" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="qq" property="qq" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        name,
        birth,
        id_card,
        code,
        email,
        mobile,
        address,
        company,
        create_time,
        update_time,
        ext1,
        ext2,
        ext3,
        uid,
        phone,
        qq
    </sql>

    <insert id="insertLinkman" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO linkman (
            name,
            birth,
            id_card,
            code,
            email,
            mobile,
            address,
            company,
            create_time,
            ext1,
            ext2,
            ext3,
            uid,
            phone,
            qq
        ) VALUES (
            #{name,jdbcType = VARCHAR},
            #{birth,jdbcType = VARCHAR},
            #{idCard,jdbcType = VARCHAR},
            #{code,jdbcType = VARCHAR},
            #{email,jdbcType = VARCHAR},
            #{mobile,jdbcType = VARCHAR},
            #{address,jdbcType = VARCHAR},
            #{company,jdbcType = VARCHAR},
            now(),
            #{ext1,jdbcType = VARCHAR},
            #{ext2,jdbcType = VARCHAR},
            #{ext3,jdbcType = VARCHAR},
            #{uid,jdbcType = VARCHAR},
            #{phone,jdbcType = VARCHAR},
            #{qq,jdbcType = VARCHAR}
        )
    </insert>

    <update id="updateLinkman">
        UPDATE linkman
        <set>
            name = #{name,jdbcType = VARCHAR},
            birth = #{birth,jdbcType = VARCHAR},
            id_card = #{idCard,jdbcType = VARCHAR},
            code = #{code,jdbcType = VARCHAR},
            email = #{email,jdbcType = VARCHAR},
            mobile = #{mobile,jdbcType = VARCHAR},
            address = #{address,jdbcType = VARCHAR},
            company = #{company,jdbcType = VARCHAR},
            update_time = now(),
            ext1 = #{ext1,jdbcType = VARCHAR},
            ext2 = #{ext2,jdbcType = VARCHAR},
            ext3 = #{ext3,jdbcType = VARCHAR},
            phone = #{phone,jdbcType = VARCHAR},
            qq = #{qq,jdbcType = VARCHAR}
        </set>
        <where>
            and id = #{id,jdbcType = VARCHAR}
            and uid = #{uid,jdbcType = VARCHAR}
        </where>
    </update>

    <delete id="batchDeleteLinkman">
        DELETE FROM linkman
        <where>
            and uid = #{uid,jdbcType = VARCHAR}
            <foreach collection="idList" index="index" item="item" open="and id in (" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </delete>

    <delete id="deleteLinkman">
        DELETE FROM linkman
        <where>
            and id = #{id,jdbcType = VARCHAR}
            and uid = #{uid,jdbcType = VARCHAR}
        </where>
    </delete>

    <select id="getList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from linkman
    </select>

    <select id="getOne" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from linkman
        <where>
            and uid = #{uid,jdbcType=VARCHAR}
            <if test="code != null and code != ''">
                and code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="id != null and id != ''">
                and id = #{id,jdbcType=VARCHAR}
            </if>
        </where>
        limit 1
    </select>

    <select id="getLinkmanList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from linkman
        <where>
            and uid = #{uid,jdbcType=VARCHAR}
            <if test="name != null and name != ''">
                and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
            </if>
        </where>
        order by name asc,create_time desc
    </select>
</mapper>